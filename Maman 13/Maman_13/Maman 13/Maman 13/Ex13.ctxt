#BlueJ class context
comment0.target=Ex13
comment1.params=arr
comment1.target=int\ maxMult3(int[])
comment1.text=\n\ Finds\ the\ maximum\ multiplation\ of\ three\ cells\ in\ array\n\ Time\ Complexity\:\ O(O^2)\ because\ he\ nested\ loops\ used\ to\ find\ the\ maximum\ result\ of\ three\ cells\ in\ the\ sorted\ array\n\ Space\ Complexity\:\ O(1)\ because\ it\ doesn't\ use\ any\ additional\ space\ that\ scales\ with\ input\ size\n\ Returns\ Integer.MIN_VALUE\ if\ the\ input\ array\ has\ fewer\ than\ three\ cells\n\ @param\ arr\ The\ input\ array\n\ @return\ The\ maximum\ result\ of\ multiplation\ on\ three\ cells\ from\ the\ input\ array\n
comment2.params=arr1\ arr2
comment2.target=int\ findMedian(int[],\ int[])
comment2.text=\n\ \ Calculates\ the\ median\ of\ two\ sorted\ arrays,\ by\ calling\ 'findMiddleIndexValue'\ private\ function\ on\ each\ array\ and\ then\ averaging\ the\ results\n\ \ Time\ complexity\:\ O(log\ n)\ because\ the\ function\ uses\ a\ binary\ search\ method\ to\ find\ the\ medians\ of\ both\ arrays\n\ \ Space\ complexity\:\ O(1)\ because\ it\ doesn't\ use\ any\ additional\ space\ that\ scales\ with\ input\ size\n\ @param\ arr1\ The\ first\ array\n\ @param\ arr2\ The\ second\ array\n\ @return\ Overall\ median\ of\ the\ combined\ arrays\n
comment3.params=arr
comment3.target=int\ findMiddleIndexValue(int[])
comment4.params=st1\ st2
comment4.target=java.lang.String\ minimalSt(java.lang.String,\ java.lang.String)
comment4.text=\n\ Finds\ the\ minimal\ string\ combination\ of\ two\ strings\n\ The\ minimal\ string\ should\ have\ characters\ from\ both\ input\ strings\ but\ with\ the\ least\ number\ of\ duplicates\n\ @param\ st1\ The\ first\ string\n\ @param\ st2\ The\ second\ string\n\ @return\ The\ minimal\ string\ combination\ of\ the\ two\ strings\n
comment5.params=st1\ st2\ x\ y
comment5.target=java.lang.String\ minimalSt(java.lang.String,\ java.lang.String,\ int,\ int)
comment6.params=mat
comment6.target=int\ maxSnake(int[][])
comment6.text=\n\ Calculates\ the\ maximum\ snake\ value\ for\ the\ given\ matrix\n\ The\ difference\ between\ two\ cells\ that\ the\ snake\ is\ visting\ should\ be\ acual\ to\ 1\n\ The\ snake\ cannot\ visit\ the\ same\ cell\ twice\n\ @param\ mat\ The\ input\ mat\ for\ the\ snake\n\ @return\ The\ maximum\ snake\ value\n
comment7.params=mat\ x\ y\ prevValue
comment7.target=int\ maxSnake(int[][],\ int,\ int,\ int)
numComments=8
